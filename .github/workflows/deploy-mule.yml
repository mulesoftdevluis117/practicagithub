name: Deploy Mule App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Clonar tu repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Instalar Java 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      # 3️⃣ Construir el proyecto Mule con Maven (con depuración)
      - name: Build Mule project
        env:
          ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
          ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
        run: mvn clean package -s .github/settings.xml -e -X -DmuleDeploy

      # 4️⃣ Verificar los archivos generados
      - name: Check generated files
        run: |
          ls -l target/
          # Verificar que el archivo JAR existe
          if [ ! -f "target/ejemplogithub-1.0.0-SNAPSHOT-mule-application.jar" ]; then
            echo "::error::El archivo JAR no se generó correctamente"
            exit 1
          fi

      # 5️⃣ Obtener token de acceso de Connected App
      - name: Get Access Token
        id: get_token
        run: |
          TOKEN=$(curl -s -X POST https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=${{ secrets.ANYPOINT_CLIENT_ID }}" \
            -d "client_secret=${{ secrets.ANYPOINT_CLIENT_SECRET }}" \
            -d "grant_type=client_credentials" | jq -r '.access_token')
          
          if [ -z "$TOKEN" ]; then
            echo "::error::No se pudo obtener el token de acceso"
            exit 1
          fi
          
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV
          echo "Token obtenido correctamente"

      # 6️⃣ Desplegar la aplicación Mule con Maven
      - name: Build and Deploy with Maven
        env:
          ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
          ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
          ANYPOINT_ENVIRONMENT: Sandbox
          ANYPOINT_BUSINESSGROUP: a7e624be-4fa2-429a-bddf-ed8a6b4b4491
          ANYPOINT_TARGET: US East (Ohio)
        run: |
          mvn clean package deploy -s .github/settings.xml \
            -DskipTests \
            -Danypoint.clientId="${ANYPOINT_CLIENT_ID}" \
            -Danypoint.clientSecret="${ANYPOINT_CLIENT_SECRET}" \
            -Danypoint.environment="${ANYPOINT_ENVIRONMENT}" \
            -Danypoint.businessGroup="${ANYPOINT_BUSINESSGROUP}" \
            -Danypoint.target="${ANYPOINT_TARGET}"

      # 7️⃣ Despliegue alternativo con cURL si Maven falla
      - name: Deploy to CloudHub (Fallback)
        if: failure()
        env:
          TOKEN: ${{ env.TOKEN }}
        run: |
          echo "Intentando despliegue alternativo con cURL..."
          
          if [ -z "$TOKEN" ]; then
            echo "::error::No se encontró el token de acceso"
            exit 1
          fi
          
          if [ ! -f "target/ejemplogithub-1.0.0-SNAPSHOT-mule-application.jar" ]; then
            echo "::error::No se encontró el archivo JAR para desplegar"
            exit 1
          fi
          
          curl -v -X POST https://anypoint.mulesoft.com/cloudhub/api/v2/applications \
            -H "Authorization: Bearer $TOKEN" \
            -H "X-ANYPNT-ENV-ID: ${{ secrets.ANYPOINT_ENVIRONMENT_ID }}" \
            -H "X-ANYPNT-ORG-ID: ${{ secrets.ANYPOINT_BUSINESSGROUP }}" \
            -F "file=@target/ejemplogithub-1.0.0-SNAPSHOT-mule-application.jar" \
            -F "domain=ejemplogithub" \
            -F "workers=1" \
            -F "workerSize=.1" \
            -F "runtime=4.4.0" \
            -F "region=us-east-1" \
            -F "persistentQueues=false" \
            -F "persistentQueues=false" \
            -F "monitoringEnabled=true" \
            -F "monitoringAutoRestart=true"
